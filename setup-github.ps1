# üöÄ Configura√ß√£o Git e GitHub - Traffic Manager Hub
# Script PowerShell para automatizar a configura√ß√£o

Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üöÄ Configura√ß√£o Git e GitHub" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar se Git j√° est√° instalado
Write-Host "üìã Verificando se Git est√° instalado..." -ForegroundColor Yellow
try {
    $gitVersion = git --version 2>$null
    if ($gitVersion) {
        Write-Host "‚úÖ Git j√° est√° instalado!" -ForegroundColor Green
        Write-Host $gitVersion -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Git n√£o encontrado. Instalando..." -ForegroundColor Red
    Write-Host ""
    Write-Host "üîß Instalando Git via winget..." -ForegroundColor Yellow
    
    try {
        winget install --id Git.Git -e --source winget
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ Git instalado com sucesso!" -ForegroundColor Green
            Write-Host "üîÑ Reiniciando terminal para aplicar mudan√ßas..." -ForegroundColor Yellow
            Write-Host ""
            Write-Host "‚ö†Ô∏è  Por favor, feche este terminal e abra um novo para continuar." -ForegroundColor Yellow
            Read-Host "Pressione Enter para sair"
            exit
        } else {
            throw "Erro na instala√ß√£o"
        }
    } catch {
        Write-Host "‚ùå Erro ao instalar Git via winget." -ForegroundColor Red
        Write-Host ""
        Write-Host "üì• Instale manualmente em: https://git-scm.com/download/win" -ForegroundColor Yellow
        Read-Host "Pressione Enter para sair"
        exit 1
    }
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üîß Configura√ß√£o do Git" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Configurar Git
Write-Host "üìù Configurando Git..." -ForegroundColor Yellow
Write-Host ""

$gitName = Read-Host "Digite seu nome completo"
$gitEmail = Read-Host "Digite seu email"

git config --global user.name $gitName
git config --global user.email $gitEmail
git config --global init.defaultBranch main
git config --global core.autocrlf true

Write-Host "‚úÖ Git configurado com sucesso!" -ForegroundColor Green
Write-Host ""

# Verificar se reposit√≥rio j√° est√° inicializado
if (Test-Path ".git") {
    Write-Host "‚úÖ Reposit√≥rio Git j√° inicializado!" -ForegroundColor Green
} else {
    Write-Host "üîß Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
    git init
    Write-Host "‚úÖ Reposit√≥rio inicializado!" -ForegroundColor Green
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üì¶ Preparando primeiro commit" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Adicionar arquivos
Write-Host "üìÅ Adicionando arquivos ao Git..." -ForegroundColor Yellow
git add .

# Verificar se h√° mudan√ßas para commitar
$hasChanges = git diff --cached --quiet
if ($LASTEXITCODE -eq 0) {
    Write-Host "‚ÑπÔ∏è  Nenhuma mudan√ßa para commitar." -ForegroundColor Gray
} else {
    Write-Host "üíæ Fazendo primeiro commit..." -ForegroundColor Yellow
    git commit -m "üéâ Initial commit: Traffic Manager Hub"
    Write-Host "‚úÖ Primeiro commit realizado!" -ForegroundColor Green
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üåê Configura√ß√£o GitHub" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""

# Verificar GitHub CLI
Write-Host "üìã Verificando GitHub CLI..." -ForegroundColor Yellow
try {
    $ghVersion = gh --version 2>$null
    if ($ghVersion) {
        Write-Host "‚úÖ GitHub CLI j√° est√° instalado!" -ForegroundColor Green
    }
} catch {
    Write-Host "üîß Instalando GitHub CLI..." -ForegroundColor Yellow
    try {
        winget install --id GitHub.cli -e --source winget
        if ($LASTEXITCODE -eq 0) {
            Write-Host "‚úÖ GitHub CLI instalado!" -ForegroundColor Green
            Write-Host "üîÑ Reiniciando terminal..." -ForegroundColor Yellow
            Read-Host "Pressione Enter para sair"
            exit
        } else {
            throw "Erro na instala√ß√£o"
        }
    } catch {
        Write-Host "‚ùå Erro ao instalar GitHub CLI." -ForegroundColor Red
        Write-Host "üì• Instale manualmente: https://cli.github.com/" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "========================================" -ForegroundColor Cyan
Write-Host "üéØ Pr√≥ximos Passos" -ForegroundColor Cyan
Write-Host "========================================" -ForegroundColor Cyan
Write-Host ""
Write-Host "1Ô∏è‚É£  Fa√ßa login no GitHub CLI:" -ForegroundColor Yellow
Write-Host "    gh auth login" -ForegroundColor Gray
Write-Host ""
Write-Host "2Ô∏è‚É£  Crie o reposit√≥rio no GitHub:" -ForegroundColor Yellow
Write-Host "    gh repo create traffic-manager-hub --public --description `"Plataforma Inteligente para Gestores de Tr√°fego`"" -ForegroundColor Gray
Write-Host ""
Write-Host "3Ô∏è‚É£  Fa√ßa o push inicial:" -ForegroundColor Yellow
Write-Host "    git push -u origin main" -ForegroundColor Gray
Write-Host ""
Write-Host "4Ô∏è‚É£  Configure branches protegidas no GitHub.com" -ForegroundColor Yellow
Write-Host ""
Write-Host "üìö Consulte o arquivo GUIA-CONFIGURACAO-GITHUB.md para mais detalhes." -ForegroundColor Cyan
Write-Host ""

Read-Host "Pressione Enter para sair"

